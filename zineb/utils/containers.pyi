from zineb.models.datastructure import Model
from typing import Any, Dict, List, Union

class SmartDict:
    current_updated_fields: set = ...
    def __init__(self, *fields: str): ...
    def __repr__(self) -> str: ...
    def __str__(self) -> str: ...
    @classmethod
    def new_instance(cls, model: Model) -> SmartDict: ...
    def get_container(self, name: str): ...
    def update(self, name: str, value: Union[str, int, float, list, dict]) -> None: ...
    def update_multiple(self, attrs: dict) -> None: ...
    def apply_sort(self, values: List) -> List: ...
    def as_values(self) -> Dict[str, List[str]]: ...
    def as_list(self, include_index: bool=False) -> List[Dict[str, Any]]: ...
    def as_csv(self) -> List[List[Any]]: ...
    def execute_save(self, commit: bool = ..., filename: str = ..., extension: str = ..., **kwargs) -> Union[dict, None]: ...
